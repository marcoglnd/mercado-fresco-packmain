definitions:
  controllers.request:
    properties:
      card_number_id:
        type: string
      first_name:
        type: string
      last_name:
        type: string
    type: object
  schemes.Buyer:
    properties:
      card_number_id:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
    type: object
  schemes.JSONBadReqResult:
    properties:
      code:
        example: 400
        type: integer
      data: {}
      message:
        example: Wrong parameter
        type: string
    type: object
  schemes.JSONSuccessResult:
    properties:
      code:
        example: 200
        type: integer
      data: {}
      message:
        example: Success
        type: string
    type: object
host: localhost:8080
info:
  contact:
    name: API Support
    url: https://developers.mercadolibre.com.ar/support
  description: This API Handle MELI Products.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://developers.mercadolibre.com.ar/es_ar/terminos-y-condiciones
  title: MERCADO FRESCOS
  version: "1.0"
paths:
  /buyers:
    get:
      consumes:
      - application/json
      description: get all buyers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/schemes.JSONSuccessResult'
            - properties:
                code:
                  type: integer
                data:
                  $ref: '#/definitions/schemes.Buyer'
                message:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/schemes.JSONBadReqResult'
            - properties:
                code:
                  type: integer
                message:
                  type: string
              type: object
      summary: List buyers
      tags:
      - Buyers
  /buyers/:
    post:
      consumes:
      - application/json
      description: Add a new buyer to the list
      parameters:
      - description: Buyer to create
        in: body
        name: buyer
        required: true
        schema:
          $ref: '#/definitions/controllers.request'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/schemes.JSONSuccessResult'
            - properties:
                code:
                  type: integer
                data:
                  $ref: '#/definitions/schemes.Buyer'
                message:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/schemes.JSONBadReqResult'
            - properties:
                code:
                  type: integer
                message:
                  type: string
              type: object
        "422":
          description: Unprocessable Entity
          schema:
            allOf:
            - $ref: '#/definitions/schemes.JSONBadReqResult'
            - properties:
                code:
                  type: integer
                message:
                  type: string
              type: object
      summary: Create buyer
      tags:
      - Buyers
  /buyers/{id}:
    delete:
      consumes:
      - application/json
      description: Delete existing buyer in list
      parameters:
      - description: Buyer ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            allOf:
            - $ref: '#/definitions/schemes.JSONSuccessResult'
            - properties:
                code:
                  type: integer
                data:
                  $ref: '#/definitions/schemes.Buyer'
                message:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/schemes.JSONBadReqResult'
            - properties:
                code:
                  type: integer
                message:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/schemes.JSONBadReqResult'
            - properties:
                code:
                  type: integer
                message:
                  type: string
              type: object
      summary: Delete buyer
      tags:
      - Buyers
    get:
      consumes:
      - application/json
      description: get buyer by its id
      parameters:
      - description: Buyer ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/schemes.JSONSuccessResult'
            - properties:
                code:
                  type: integer
                data:
                  $ref: '#/definitions/schemes.Buyer'
                message:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/schemes.JSONBadReqResult'
            - properties:
                code:
                  type: integer
                message:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/schemes.JSONBadReqResult'
            - properties:
                code:
                  type: integer
                message:
                  type: string
              type: object
      summary: Buyer by id
      tags:
      - Buyers
    patch:
      consumes:
      - application/json
      description: Update existing buyer in list
      parameters:
      - description: Buyer ID
        in: path
        name: id
        required: true
        type: integer
      - description: Buyer to update
        in: body
        name: buyer
        required: true
        schema:
          $ref: '#/definitions/controllers.request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/schemes.JSONSuccessResult'
            - properties:
                code:
                  type: integer
                data:
                  $ref: '#/definitions/schemes.Buyer'
                message:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/schemes.JSONBadReqResult'
            - properties:
                code:
                  type: integer
                message:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/schemes.JSONBadReqResult'
            - properties:
                code:
                  type: integer
                message:
                  type: string
              type: object
      summary: Update buyer
      tags:
      - Buyers
swagger: "2.0"
